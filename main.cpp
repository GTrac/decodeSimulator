#include <iostream>
#include decode.cpp

using namespace std;

#DEFINE LB 0b00000000110000011000001110000011 // 12 | 3 | 000 | 7 | I type
#DEFINE LBU 0b00000000110000011100001110000011 // 12 | 3 | 100 | 7 | I type
#DEFINE SB 0b00000000001100001000011110100011 // 0 | 3 | 1 | 000 | 15 | S type
#DEFINE LH 0b00000000110000011001001110000011 // 12 | 3 | 001 | 7 | I type
#DEFINE LHU 0b00000000110000011101001110000011 // 12 | 3 | 101 | 7 | I type
#DEFINE SH 0b00000000001100001001011110100011 // 0 | 3 | 1 | 001 | 15 | S type
#DEFINE LW 0b00000000110000011010001110000011 // 12 | 3 | 010 | 7 | I type
//#DEFINE LWU 0b00000000110000011100001110000011 // DOESNT EXIST ///////////////////////////////////
#DEFINE SW 0b00000000001100001010011110100011 // 0 | 3 | 1 | 010 | 15 | S type
#DEFINE LD 0b00000000110000011011001110000011 // 12 | 3 | 011 | 7 | I type
#DEFINE SD 0b00000000001100001011011110100011 // 0 | 3 | 1 | 011 | 15 | S type
#DEFINE FLW 0b00000000001100011010000010000111 // imm | rs1 | 010 | rd | 0000111
#DEFINE FLD 0b00000000001100011011000010000111 // imm | rs1 | 011 | rd | 0000111
#DEFINE FSW 0b00000000001100011010011110100111 // imm | rs2 | rs1 | 010 | imm | 0100111
#DEFINE FSD 0b00000000001100011011011110100111 // imm | rs2 | rs1 | 011 | imm | 0100111
#DEFINE FMVDX 0b11100010000000011000001111010011 // 1110001 00000 rs1 000 rd 1010011
#DEFINE FMVXD 0b11100010000000011000001111010011  //1110001 00000 rs1 000 rd 1010011
#DEFINE csrrw 0b00000000000100011001001111110011 //csr rs1 001 rd 1110011 
#DEFINE csrrs 0b00000000000100011010001111110011 //csr rs1 010 rd 1110011 
#DEFINE csrrc 0b00000000000100011011001111110011 //csr rs1 011 rd 1110011
#DEFINE csrwi 0b00000000000100011101001111110011 //csr zimm 101 rd 1110011
#DEFINE csrsi 0b00000000000100011110001111110011 //csr zimm 110 rd 1110011
int main(){


    int add =    0b00000000000100010000000110110011; // 0 | 01 | 10 | 000 | 11 | ADD
    int sub =    0b01000000000100010000000110110011; // 1 | 01 | 10 | 000 | 11 | SUB
    int sll =    0b00000000000100010001000110110011; // 0 | 01 | 10 | 001 | 11 | SLL
    int slt =    0b00000000000100010010000110110011; // 0 | 01 | 10 | 010 | 11 | SLT
    int sltu =   0b00000000000100010011000110110011; // 0 | 01 | 10 | 011 | 11 | SLTU
    int xor =    0b00000000000100010011000110110011; // 0 | 01 | 10 | 100 | 11 | XOR
    int xor =    0b00000000000100010011000110110011; // 0 | 01 | 10 | 100 | 11 | XOR
    
    int addi =   0b00000000000100001000000010010011;

}